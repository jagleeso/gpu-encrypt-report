%!PS-Adobe-2.0 EPSF-2.0
%%Title: final/motox/4.2/sample_memcopy.100_samples.256MB.4_work_groups.2000ms.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Wed Jan  8 18:14:26 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -33 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (final/motox/4.2/sample_memcopy.100_samples.256MB.4_work_groups.2000ms.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (jgleeson)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jan  8 18:14:26 2014)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 100 scalefont setfont
1.000 UL
LT0
550 620 M
63 0 V
-123 0 R
( 100) Rshow
1.000 UL
LT0
550 1078 M
63 0 V
-123 0 R
( 200) Rshow
1.000 UL
LT0
550 1535 M
63 0 V
-123 0 R
( 300) Rshow
1.000 UL
LT0
550 1993 M
63 0 V
-123 0 R
( 400) Rshow
1.000 UL
LT0
550 2451 M
63 0 V
-123 0 R
( 500) Rshow
1.000 UL
LT0
550 2908 M
63 0 V
-123 0 R
( 600) Rshow
1.000 UL
LT0
550 3366 M
63 0 V
-123 0 R
( 700) Rshow
1.000 UL
LT0
550 3824 M
63 0 V
-123 0 R
( 800) Rshow
1.000 UL
LT0
550 4281 M
63 0 V
-123 0 R
( 900) Rshow
1.000 UL
LT0
550 4739 M
63 0 V
-123 0 R
( 1000) Rshow
1.000 UL
LT0
550 620 M
0 63 V
0 4056 R
0 -63 V
550 520 M
( 0) Cshow
1.000 UL
LT0
1628 620 M
0 63 V
0 4056 R
0 -63 V
0 -4156 R
( 50) Cshow
1.000 UL
LT0
2706 620 M
0 63 V
0 4056 R
0 -63 V
0 -4156 R
( 100) Cshow
1.000 UL
LT0
3785 620 M
0 63 V
0 4056 R
0 -63 V
0 -4156 R
( 150) Cshow
1.000 UL
LT0
4863 620 M
0 63 V
0 4056 R
0 -63 V
0 -4156 R
( 200) Cshow
1.000 UL
LT0
5941 620 M
0 63 V
0 4056 R
0 -63 V
0 -4156 R
( 250) Cshow
1.000 UL
LT0
7019 620 M
0 63 V
0 4056 R
0 -63 V
0 -4156 R
( 300) Cshow
1.000 UL
LT0
1.000 UL
LT0
550 4739 M
550 620 L
6469 0 R
0 4119 R
-6469 0 R
stroke
LCb setrgbcolor
80 2679 M
currentpoint gsave translate -270 rotate 0 0 M
(Throughput \(MB/second\)) Cshow
grestore
LTb
LCb setrgbcolor
3784 370 M
(Input size \(MB\)) Cshow
LTb
3784 4889 M
(CPU-GPU Communication - MotoX) Cshow
0.500 UP
1.000 UL
LT0
% Begin plot #1
0.500 UP
1.000 UL
LT0
1.00 0.00 0.00 C LCb setrgbcolor
3289 213 M
(CPU-to-GPU) Lshow
LT0
1.00 0.00 0.00 C 3949 213 M
271 0 V
605 2431 M
56 77 V
55 12 V
55 -54 V
55 74 V
55 -136 V
55 -43 V
56 -50 V
55 -46 V
55 20 V
55 -111 V
56 16 V
55 -105 V
55 -51 V
55 -2 V
55 -86 V
56 2 V
55 6 V
55 -136 V
55 -32 V
55 -25 V
55 -55 V
56 -46 V
55 -34 V
55 -34 V
55 -35 V
56 -32 V
55 -40 V
55 -21 V
55 -12 V
55 -46 V
56 -34 V
55 -12 V
55 -18 V
55 -30 V
55 17 V
56 -61 V
55 -2 V
55 -33 V
55 -24 V
55 -10 V
56 -22 V
55 -10 V
55 -95 V
55 -16 V
55 -26 V
56 -3 V
55 -20 V
55 8 V
55 -20 V
55 17 V
56 -42 V
55 2 V
55 -10 V
55 -20 V
55 -1 V
56 -15 V
55 -7 V
55 3 V
55 -14 V
55 -5 V
56 -19 V
55 10 V
55 -37 V
55 6 V
55 -8 V
56 -8 V
55 -5 V
55 -8 V
55 -37 V
55 21 V
56 -5 V
55 -3 V
55 -1 V
55 -14 V
55 -3 V
56 -8 V
55 -4 V
55 1 V
55 -13 V
56 15 V
55 -23 V
55 0 V
55 -9 V
55 1 V
55 -13 V
56 -4 V
55 0 V
55 -9 V
55 -4 V
55 -7 V
56 -3 V
55 4 V
55 -11 V
55 -6 V
56 11 V
55 -19 V
55 -3 V
55 5 V
55 -20 V
605 2431 C15
661 2508 C15
716 2520 C15
771 2466 C15
826 2540 C15
881 2404 C15
936 2361 C15
992 2311 C15
1047 2265 C15
1102 2285 C15
1157 2174 C15
1213 2190 C15
1268 2085 C15
1323 2034 C15
1378 2032 C15
1433 1946 C15
1489 1948 C15
1544 1954 C15
1599 1818 C15
1654 1786 C15
1709 1761 C15
1764 1706 C15
1820 1660 C15
1875 1626 C15
1930 1592 C15
1985 1557 C15
2041 1525 C15
2096 1485 C15
2151 1464 C15
2206 1452 C15
2261 1406 C15
2317 1372 C15
2372 1360 C15
2427 1342 C15
2482 1312 C15
2537 1329 C15
2593 1268 C15
2648 1266 C15
2703 1233 C15
2758 1209 C15
2813 1199 C15
2869 1177 C15
2924 1167 C15
2979 1072 C15
3034 1056 C15
3089 1030 C15
3145 1027 C15
3200 1007 C15
3255 1015 C15
3310 995 C15
3365 1012 C15
3421 970 C15
3476 972 C15
3531 962 C15
3586 942 C15
3641 941 C15
3697 926 C15
3752 919 C15
3807 922 C15
3862 908 C15
3917 903 C15
3973 884 C15
4028 894 C15
4083 857 C15
4138 863 C15
4193 855 C15
4249 847 C15
4304 842 C15
4359 834 C15
4414 797 C15
4469 818 C15
4525 813 C15
4580 810 C15
4635 809 C15
4690 795 C15
4745 792 C15
4801 784 C15
4856 780 C15
4911 781 C15
4966 768 C15
5022 783 C15
5077 760 C15
5132 760 C15
5187 751 C15
5242 752 C15
5297 739 C15
5353 735 C15
5408 735 C15
5463 726 C15
5518 722 C15
5573 715 C15
5629 712 C15
5684 716 C15
5739 705 C15
5794 699 C15
5850 710 C15
5905 691 C15
5960 688 C15
6015 693 C15
6070 673 C15
4084 213 C15
% End plot #1
% Begin plot #2
0.500 UP
1.000 UL
LT1
0.00 0.00 1.00 C LCb setrgbcolor
3289 113 M
(GPU-to-CPU) Lshow
LT1
0.00 0.00 1.00 C 3949 113 M
271 0 V
605 4138 M
56 89 V
55 -39 V
55 -19 V
55 52 V
55 -14 V
55 44 V
56 108 V
55 -37 V
55 13 V
55 33 V
56 15 V
55 -6 V
55 -11 V
55 -51 V
55 -16 V
56 48 V
55 88 V
55 -53 V
55 22 V
55 -27 V
55 40 V
56 15 V
55 -15 V
55 -2 V
55 36 V
56 -61 V
55 66 V
55 -30 V
55 5 V
55 7 V
56 -19 V
55 25 V
55 5 V
55 -333 V
55 320 V
56 8 V
55 -24 V
55 -640 V
55 696 V
55 -437 V
56 412 V
55 -637 V
55 631 V
55 -9 V
55 17 V
56 -91 V
55 69 V
55 -423 V
55 417 V
55 -54 V
56 57 V
55 -46 V
55 -21 V
55 -660 V
55 736 V
56 -688 V
55 653 V
55 -216 V
55 173 V
55 16 V
56 -48 V
55 55 V
55 0 V
55 21 V
55 -35 V
56 -433 V
55 452 V
55 0 V
55 -488 V
55 125 V
56 360 V
55 44 V
55 -12 V
55 -10 V
55 33 V
56 20 V
55 -6 V
55 20 V
55 -32 V
56 3 V
55 -1 V
55 -8 V
55 29 V
55 7 V
55 -477 V
56 417 V
55 -157 V
55 231 V
55 23 V
55 -246 V
56 241 V
55 -408 V
55 86 V
55 281 V
56 10 V
55 19 V
55 10 V
55 -185 V
55 271 V
605 4138 C15
661 4227 C15
716 4188 C15
771 4169 C15
826 4221 C15
881 4207 C15
936 4251 C15
992 4359 C15
1047 4322 C15
1102 4335 C15
1157 4368 C15
1213 4383 C15
1268 4377 C15
1323 4366 C15
1378 4315 C15
1433 4299 C15
1489 4347 C15
1544 4435 C15
1599 4382 C15
1654 4404 C15
1709 4377 C15
1764 4417 C15
1820 4432 C15
1875 4417 C15
1930 4415 C15
1985 4451 C15
2041 4390 C15
2096 4456 C15
2151 4426 C15
2206 4431 C15
2261 4438 C15
2317 4419 C15
2372 4444 C15
2427 4449 C15
2482 4116 C15
2537 4436 C15
2593 4444 C15
2648 4420 C15
2703 3780 C15
2758 4476 C15
2813 4039 C15
2869 4451 C15
2924 3814 C15
2979 4445 C15
3034 4436 C15
3089 4453 C15
3145 4362 C15
3200 4431 C15
3255 4008 C15
3310 4425 C15
3365 4371 C15
3421 4428 C15
3476 4382 C15
3531 4361 C15
3586 3701 C15
3641 4437 C15
3697 3749 C15
3752 4402 C15
3807 4186 C15
3862 4359 C15
3917 4375 C15
3973 4327 C15
4028 4382 C15
4083 4382 C15
4138 4403 C15
4193 4368 C15
4249 3935 C15
4304 4387 C15
4359 4387 C15
4414 3899 C15
4469 4024 C15
4525 4384 C15
4580 4428 C15
4635 4416 C15
4690 4406 C15
4745 4439 C15
4801 4459 C15
4856 4453 C15
4911 4473 C15
4966 4441 C15
5022 4444 C15
5077 4443 C15
5132 4435 C15
5187 4464 C15
5242 4471 C15
5297 3994 C15
5353 4411 C15
5408 4254 C15
5463 4485 C15
5518 4508 C15
5573 4262 C15
5629 4503 C15
5684 4095 C15
5739 4181 C15
5794 4462 C15
5850 4472 C15
5905 4491 C15
5960 4501 C15
6015 4316 C15
6070 4587 C15
4084 113 C15
% End plot #2
1.000 UL
LT0
550 4739 M
550 620 L
6469 0 R
0 4119 R
-6469 0 R
0.500 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
